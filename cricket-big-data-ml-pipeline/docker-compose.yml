services:
  postgres:
    image: postgres:14
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  zookeeper:
    image: bitnami/zookeeper:3.9
    container_name: zookeeper
    restart: always
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/bitnami/zookeeper

  kafka:
    image: bitnami/kafka:3.9.0
    container_name: kafka
    restart: always
    environment:
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_CFG_BROKER_ID: "1"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    volumes:
      - kafka_data:/bitnami/kafka

  airflow:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: airflow
    restart: always
    depends_on:
      - postgres
      - spark-master
      - minio
      - fastapi
    environment:
      AIRFLOW__CORE__EXECUTOR: "LocalExecutor"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: "postgresql+psycopg2://airflow:airflow@postgres/airflow"
      AIRFLOW__WEBSERVER__PORT: "8080"
      JAVA_HOME: "/usr/lib/jvm/java-11-openjdk"
      SPARK_HOME: "/opt/spark"
      PATH: "/usr/lib/jvm/java-11-openjdk/bin:/opt/spark/bin:/home/airflow/.local/bin:$PATH"
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - /var/run/docker.sock:/var/run/docker.sock
      - ./spark-events:/tmp/spark-events
      - ./xcom_data:/opt/airflow/xcom_data
    command: >
      bash -c "
        airflow db init &&
        airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com &&
        airflow scheduler & airflow webserver"

  spark-master:
    image: bitnami/spark:3.5.0
    container_name: spark-master
    restart: always
    environment:
      SPARK_MODE: "master"
      SPARK_MASTER_HOST: "spark-master"
      JAVA_HOME: "/opt/bitnami/java"
      PATH: "/opt/bitnami/java/bin:/opt/spark/bin:$PATH"
      SPARK_DRIVER_MEMORY: "6g"
      SPARK_EXECUTOR_MEMORY: "6g"
      SPARK_EXECUTOR_CORES: "2"
    command: ["/opt/bitnami/spark/bin/spark-class", "org.apache.spark.deploy.master.Master"]
    ports:
      - "7077:7077"
      - "8085:8080"
    volumes:
      - ./spark-events:/tmp/spark-events
      - ./jars:/opt/spark/jars

  spark-worker:
    image: bitnami/spark:3.5.0
    container_name: spark-worker
    restart: always
    environment:
      SPARK_MODE: "worker"
      SPARK_MASTER_URL: "spark://spark-master:7077"
      JAVA_HOME: "/opt/bitnami/java"
      PATH: "/opt/bitnami/java/bin:/opt/spark/bin:$PATH"
      SPARK_WORKER_MEMORY: "6g"
      SPARK_EXECUTOR_MEMORY: "6g"
      SPARK_EXECUTOR_CORES: "2"
    depends_on:
      - spark-master
    command: ["/opt/bitnami/spark/bin/spark-class", "org.apache.spark.deploy.worker.Worker", "spark://spark-master:7077"]
    ports:
      - "8086:8081"
    volumes:
      - ./spark-events:/tmp/spark-events
      - ./jars:/opt/spark/jars

  minio:
    image: minio/minio:latest
    container_name: minio
    restart: always
    environment:
      MINIO_ROOT_USER: "admin"
      MINIO_ROOT_PASSWORD: "password"
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data

  fastapi:
    image: tiangolo/uvicorn-gunicorn-fastapi:latest
    container_name: fastapi
    restart: always
    volumes:
      - ./fastapi:/app
    ports:
      - "8000:80"

volumes:
  postgres_data:
  kafka_data:
  zookeeper_data:
  minio_data:
  airflow_logs:
  airflow_dags:
  spark-events:
  jars: